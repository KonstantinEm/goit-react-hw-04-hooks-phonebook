{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["ContactForm","contacts","onSubmit","useState","name","setName","number","setNumber","event","preventDefault","namesIsIn","reduce","acc","contact","numbersIsIn","includes","alert","contactCheck","className","s","form","label","type","value","placeholder","onChange","currentTarget","input","button","Filter","Search","ContactList","onDeleteContact","list","map","id","item","text","onClick","savedContacts","App","setContacts","filter","setFilter","firstUse","useRef","useEffect","current","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","getVisibleContacts","totalContactsCount","length","uuidv4","contactId","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.78bbd57f.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nfunction ContactForm({ contacts, onSubmit }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const contactCheck = () => {\r\n    const namesIsIn = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.name],\r\n      []\r\n    );\r\n    const numbersIsIn = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.number],\r\n      []\r\n    );\r\n\r\n    if (namesIsIn.includes(name) || numbersIsIn.includes(number)) {\r\n      alert(`${name}${number} is already in contacts`);\r\n    }\r\n\r\n    if (name === \"\" || number === \"\") {\r\n      alert(\"Enter all data, please\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n    if (contactCheck()) {\r\n      return;\r\n    }\r\n\r\n    onSubmit(name, number);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.form}>\r\n      <label className={s.label}>\r\n        Name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          placeholder=\"Jack Sparrow\"\r\n          onChange={(event) => setName(event.currentTarget.value)}\r\n          className={s.input}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.label}>\r\n        Number:\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          placeholder=\"111-11-11\"\r\n          onChange={(event) => setNumber(event.currentTarget.value)}\r\n          className={s.input}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  contacts: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label className={s.Search}>\r\n      Find contacts by name:\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.item}>\r\n          <p className={s.text}>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n            className={s.button}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import { useState, useEffect, useRef } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nconst savedContacts = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nfunction App() {\n  const [contacts, setContacts] = useState(savedContacts);\n  const [filter, setFilter] = useState(\"\");\n  const firstUse = useRef(true);\n\n  useEffect(() => {\n    if (firstUse.current) {\n      const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n\n      if (parsedContacts) {\n        setContacts(parsedContacts);\n      }\n\n      firstUse.current = false;\n      return;\n    }\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    setContacts([contact, ...contacts]);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n\n  const visibleContacts = getVisibleContacts();\n  const totalContactsCount = contacts.length;\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} contacts={contacts} />\n      <h2>Contacts</h2>\n      <p>Общее кол-во: {totalContactsCount}</p>\n      <Filter\n        value={filter}\n        onChange={(event) => setFilter(event.currentTarget.value)}\n      />\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3rg-J\",\"label\":\"ContactForm_label__XKMIG\",\"input\":\"ContactForm_input__19m3O\",\"button\":\"ContactForm_button__3e2bu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__QhUII\",\"item\":\"ContactList_item__2VqK4\",\"text\":\"ContactList_text__2nkJ0\",\"span\":\"ContactList_span__2Gmnk\",\"button\":\"ContactList_button__ZcCUl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Search\":\"Filter_Search__2091C\",\"input\":\"Filter_input__1RY75\",\"Serch\":\"Filter_Serch__1SWRB\"};"],"sourceRoot":""}